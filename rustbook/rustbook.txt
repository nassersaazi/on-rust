The Rust Programming Language Book

Chapter 1(Getting Started)
- using a ! means that you’re calling a macro instead of a normal function
-  Often, cargo check is much faster than cargo build, because it skips the step of producing an executable.  If you’re continually checking your work while writing the code, using cargo check will speed up the process

Chapter 2(Programming a Guessing Game)
- In Rust, variables are immutable by default
- Like variables, references are immutable by default
- The :: syntax in the ::new line indicates that new is an associated function of the String type. An associated function is implemented on a type, in this case String, rather than on a particular instance of a String. Some languages call this a static method 
- The Result types are enumerations, often referred to as enums. An enumeration is a type that can have a fixed set of values, and those values are called the enum’s variants 
- For Result, the variants are Ok or Err. The Ok variant indicates the opera- tion was successful, and inside Ok is the successfully generated value. The Err variant means the operation failed, and Err contains information about how or why the operation failed.  The purpose of these Result types is to encode error-handling information. Values of the Result type, like values of any type, have methods defined on them. An instance of io::Result has an expect method that you can call.  If this instance of io::Result is an Err value, expect will cause the program to crash and display the message that you passed as an argument to expect
- A crate is a collection of Rust source code files

todos:
- read -> https://timothya.com/learning/implementing-tcp-in-rust-attempt-1-rust/
- read https://dev.to/opendataanalytics/learning-rust-by-building-a-to-do-app-2okd
- write article on 'ownership' in Rust -> after reading chapter 4 of the Rustbook
- write article on 'enums' in Rust -> after reading chapter 6 of the Rustbook
